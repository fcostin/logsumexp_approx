
#ifndef JIT_COMPARE_TREE_H
#define JIT_COMPARE_TREE_H 1


const unsigned char CODE_MAX_OF_0[] = {
	0x48, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x00, //movabs $0xfff0000000000000,%rcx
	0x00, 0xf0, 0xff,
	0xc4, 0xe1, 0xf9, 0x6e, 0xd9 //vmovq  %rcx,%xmm3
};

const unsigned char CODE_MAX_OF_1[] = {
	0xc5, 0xfb, 0x10, 0x1f //vmovsd (%rdi),%xmm3
};

const unsigned char CODE_MAX_OF_2[] = {
	0xc5, 0xfb, 0x10, 0x1f, //vmovsd (%rdi),%xmm3
	0xc5, 0xfb, 0x10, 0x67, 0x08, //vmovsd 0x8(%rdi),%xmm4
	0xc5, 0xe3, 0x5f, 0xdc //vmaxsd %xmm4,%xmm3,%xmm3
};

const unsigned char CODE_MAX_OF_3[] = {
	0xc5, 0xfb, 0x10, 0x1f, //vmovsd (%rdi),%xmm3
	0xc5, 0xfb, 0x10, 0x67, 0x08, //vmovsd 0x8(%rdi),%xmm4
	0xc5, 0xfb, 0x10, 0x6f, 0x10, //vmovsd 0x10(%rdi),%xmm5
	0xc5, 0xe3, 0x5f, 0xdc, //vmaxsd %xmm4,%xmm3,%xmm3
	0xc5, 0xe3, 0x5f, 0xdd //vmaxsd %xmm5,%xmm3,%xmm3
};

const unsigned char CODE_MAX_OF_4[] = {
	0xc5, 0xfb, 0x10, 0x1f, //vmovsd (%rdi),%xmm3
	0xc5, 0xfb, 0x10, 0x67, 0x08, //vmovsd 0x8(%rdi),%xmm4
	0xc5, 0xfb, 0x10, 0x6f, 0x10, //vmovsd 0x10(%rdi),%xmm5
	0xc5, 0xfb, 0x10, 0x77, 0x18, //vmovsd 0x18(%rdi),%xmm6
	0xc5, 0xe3, 0x5f, 0xdc, //vmaxsd %xmm4,%xmm3,%xmm3
	0xc5, 0xd3, 0x5f, 0xee, //vmaxsd %xmm6,%xmm5,%xmm5
	0xc5, 0xe3, 0x5f, 0xdd //vmaxsd %xmm5,%xmm3,%xmm3
};

const unsigned char CODE_MAX_OF_5[] = {
	0xc5, 0xfb, 0x10, 0x1f, //vmovsd (%rdi),%xmm3
	0xc5, 0xfb, 0x10, 0x67, 0x08, //vmovsd 0x8(%rdi),%xmm4
	0xc5, 0xfb, 0x10, 0x6f, 0x10, //vmovsd 0x10(%rdi),%xmm5
	0xc5, 0xfb, 0x10, 0x77, 0x18, //vmovsd 0x18(%rdi),%xmm6
	0xc5, 0xfb, 0x10, 0x7f, 0x20, //vmovsd 0x20(%rdi),%xmm7
	0xc5, 0xe3, 0x5f, 0xdc, //vmaxsd %xmm4,%xmm3,%xmm3
	0xc5, 0xd3, 0x5f, 0xee, //vmaxsd %xmm6,%xmm5,%xmm5
	0xc5, 0xe3, 0x5f, 0xdd, //vmaxsd %xmm5,%xmm3,%xmm3
	0xc5, 0xe3, 0x5f, 0xdf //vmaxsd %xmm7,%xmm3,%xmm3
};

const unsigned char CODE_MAX_OF_6[] = {
	0xc5, 0xfb, 0x10, 0x1f, //vmovsd (%rdi),%xmm3
	0xc5, 0xfb, 0x10, 0x67, 0x08, //vmovsd 0x8(%rdi),%xmm4
	0xc5, 0xfb, 0x10, 0x6f, 0x10, //vmovsd 0x10(%rdi),%xmm5
	0xc5, 0xfb, 0x10, 0x77, 0x18, //vmovsd 0x18(%rdi),%xmm6
	0xc5, 0xfb, 0x10, 0x7f, 0x20, //vmovsd 0x20(%rdi),%xmm7
	0xc5, 0x7b, 0x10, 0x47, 0x28, //vmovsd 0x28(%rdi),%xmm8
	0xc5, 0xe3, 0x5f, 0xdc, //vmaxsd %xmm4,%xmm3,%xmm3
	0xc5, 0xd3, 0x5f, 0xee, //vmaxsd %xmm6,%xmm5,%xmm5
	0xc4, 0xc1, 0x43, 0x5f, 0xf8, //vmaxsd %xmm8,%xmm7,%xmm7
	0xc5, 0xe3, 0x5f, 0xdd, //vmaxsd %xmm5,%xmm3,%xmm3
	0xc5, 0xe3, 0x5f, 0xdf //vmaxsd %xmm7,%xmm3,%xmm3
};

const unsigned char CODE_MAX_OF_7[] = {
	0xc5, 0xfb, 0x10, 0x1f, //vmovsd (%rdi),%xmm3
	0xc5, 0xfb, 0x10, 0x67, 0x08, //vmovsd 0x8(%rdi),%xmm4
	0xc5, 0xfb, 0x10, 0x6f, 0x10, //vmovsd 0x10(%rdi),%xmm5
	0xc5, 0xfb, 0x10, 0x77, 0x18, //vmovsd 0x18(%rdi),%xmm6
	0xc5, 0xfb, 0x10, 0x7f, 0x20, //vmovsd 0x20(%rdi),%xmm7
	0xc5, 0x7b, 0x10, 0x47, 0x28, //vmovsd 0x28(%rdi),%xmm8
	0xc5, 0x7b, 0x10, 0x4f, 0x30, //vmovsd 0x30(%rdi),%xmm9
	0xc5, 0xe3, 0x5f, 0xdc, //vmaxsd %xmm4,%xmm3,%xmm3
	0xc5, 0xd3, 0x5f, 0xee, //vmaxsd %xmm6,%xmm5,%xmm5
	0xc4, 0xc1, 0x43, 0x5f, 0xf8, //vmaxsd %xmm8,%xmm7,%xmm7
	0xc5, 0xe3, 0x5f, 0xdd, //vmaxsd %xmm5,%xmm3,%xmm3
	0xc4, 0xc1, 0x43, 0x5f, 0xf9, //vmaxsd %xmm9,%xmm7,%xmm7
	0xc5, 0xe3, 0x5f, 0xdf //vmaxsd %xmm7,%xmm3,%xmm3
};

const unsigned char CODE_MAX_OF_8[] = {
	0xc5, 0xfb, 0x10, 0x1f, //vmovsd (%rdi),%xmm3
	0xc5, 0xfb, 0x10, 0x67, 0x08, //vmovsd 0x8(%rdi),%xmm4
	0xc5, 0xfb, 0x10, 0x6f, 0x10, //vmovsd 0x10(%rdi),%xmm5
	0xc5, 0xfb, 0x10, 0x77, 0x18, //vmovsd 0x18(%rdi),%xmm6
	0xc5, 0xfb, 0x10, 0x7f, 0x20, //vmovsd 0x20(%rdi),%xmm7
	0xc5, 0x7b, 0x10, 0x47, 0x28, //vmovsd 0x28(%rdi),%xmm8
	0xc5, 0x7b, 0x10, 0x4f, 0x30, //vmovsd 0x30(%rdi),%xmm9
	0xc5, 0x7b, 0x10, 0x57, 0x38, //vmovsd 0x38(%rdi),%xmm10
	0xc5, 0xe3, 0x5f, 0xdc, //vmaxsd %xmm4,%xmm3,%xmm3
	0xc5, 0xd3, 0x5f, 0xee, //vmaxsd %xmm6,%xmm5,%xmm5
	0xc4, 0xc1, 0x43, 0x5f, 0xf8, //vmaxsd %xmm8,%xmm7,%xmm7
	0xc4, 0x41, 0x33, 0x5f, 0xca, //vmaxsd %xmm10,%xmm9,%xmm9
	0xc5, 0xe3, 0x5f, 0xdd, //vmaxsd %xmm5,%xmm3,%xmm3
	0xc4, 0xc1, 0x43, 0x5f, 0xf9, //vmaxsd %xmm9,%xmm7,%xmm7
	0xc5, 0xe3, 0x5f, 0xdf //vmaxsd %xmm7,%xmm3,%xmm3
};

const unsigned char CODE_MAX_OF_9[] = {
	0xc5, 0xfb, 0x10, 0x1f, //vmovsd (%rdi),%xmm3
	0xc5, 0xfb, 0x10, 0x67, 0x08, //vmovsd 0x8(%rdi),%xmm4
	0xc5, 0xfb, 0x10, 0x6f, 0x10, //vmovsd 0x10(%rdi),%xmm5
	0xc5, 0xfb, 0x10, 0x77, 0x18, //vmovsd 0x18(%rdi),%xmm6
	0xc5, 0xfb, 0x10, 0x7f, 0x20, //vmovsd 0x20(%rdi),%xmm7
	0xc5, 0x7b, 0x10, 0x47, 0x28, //vmovsd 0x28(%rdi),%xmm8
	0xc5, 0x7b, 0x10, 0x4f, 0x30, //vmovsd 0x30(%rdi),%xmm9
	0xc5, 0x7b, 0x10, 0x57, 0x38, //vmovsd 0x38(%rdi),%xmm10
	0xc5, 0x7b, 0x10, 0x5f, 0x40, //vmovsd 0x40(%rdi),%xmm11
	0xc5, 0xe3, 0x5f, 0xdc, //vmaxsd %xmm4,%xmm3,%xmm3
	0xc5, 0xd3, 0x5f, 0xee, //vmaxsd %xmm6,%xmm5,%xmm5
	0xc4, 0xc1, 0x43, 0x5f, 0xf8, //vmaxsd %xmm8,%xmm7,%xmm7
	0xc4, 0x41, 0x33, 0x5f, 0xca, //vmaxsd %xmm10,%xmm9,%xmm9
	0xc5, 0xe3, 0x5f, 0xdd, //vmaxsd %xmm5,%xmm3,%xmm3
	0xc4, 0xc1, 0x43, 0x5f, 0xf9, //vmaxsd %xmm9,%xmm7,%xmm7
	0xc5, 0xe3, 0x5f, 0xdf, //vmaxsd %xmm7,%xmm3,%xmm3
	0xc4, 0xc1, 0x63, 0x5f, 0xdb //vmaxsd %xmm11,%xmm3,%xmm3
};

const unsigned char CODE_MAX_OF_10[] = {
	0xc5, 0xfb, 0x10, 0x1f, //vmovsd (%rdi),%xmm3
	0xc5, 0xfb, 0x10, 0x67, 0x08, //vmovsd 0x8(%rdi),%xmm4
	0xc5, 0xfb, 0x10, 0x6f, 0x10, //vmovsd 0x10(%rdi),%xmm5
	0xc5, 0xfb, 0x10, 0x77, 0x18, //vmovsd 0x18(%rdi),%xmm6
	0xc5, 0xfb, 0x10, 0x7f, 0x20, //vmovsd 0x20(%rdi),%xmm7
	0xc5, 0x7b, 0x10, 0x47, 0x28, //vmovsd 0x28(%rdi),%xmm8
	0xc5, 0x7b, 0x10, 0x4f, 0x30, //vmovsd 0x30(%rdi),%xmm9
	0xc5, 0x7b, 0x10, 0x57, 0x38, //vmovsd 0x38(%rdi),%xmm10
	0xc5, 0x7b, 0x10, 0x5f, 0x40, //vmovsd 0x40(%rdi),%xmm11
	0xc5, 0x7b, 0x10, 0x67, 0x48, //vmovsd 0x48(%rdi),%xmm12
	0xc5, 0xe3, 0x5f, 0xdc, //vmaxsd %xmm4,%xmm3,%xmm3
	0xc5, 0xd3, 0x5f, 0xee, //vmaxsd %xmm6,%xmm5,%xmm5
	0xc4, 0xc1, 0x43, 0x5f, 0xf8, //vmaxsd %xmm8,%xmm7,%xmm7
	0xc4, 0x41, 0x33, 0x5f, 0xca, //vmaxsd %xmm10,%xmm9,%xmm9
	0xc4, 0x41, 0x23, 0x5f, 0xdc, //vmaxsd %xmm12,%xmm11,%xmm11
	0xc5, 0xe3, 0x5f, 0xdd, //vmaxsd %xmm5,%xmm3,%xmm3
	0xc4, 0xc1, 0x43, 0x5f, 0xf9, //vmaxsd %xmm9,%xmm7,%xmm7
	0xc5, 0xe3, 0x5f, 0xdf, //vmaxsd %xmm7,%xmm3,%xmm3
	0xc4, 0xc1, 0x63, 0x5f, 0xdb //vmaxsd %xmm11,%xmm3,%xmm3
};



#endif
